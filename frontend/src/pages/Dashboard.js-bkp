import React, { useState, useEffect } from 'react';
import Header from '../components/Header';
import ExpenseForm from '../components/ExpenseForm';
import ExpenseList from '../components/ExpenseList';
import ExpenseChart from '../components/ExpenseChart';
import { useNavigate } from 'react-router-dom';
import { Box, Button, Typography, Alert, Card, CardContent } from '@mui/material';
import { apiGetDespesas } from '../api';

const Dashboard = () => {
  const [reload, setReload] = useState(false);
  const [despesas, setDespesas] = useState([]);
  const [loading, setLoading] = useState(true);
  const [erro, setErro] = useState('');
  const navigate = useNavigate();

  const token = localStorage.getItem('token');

  // Protege a rota e carrega as despesas do usuário autenticado
  useEffect(() => {
    if (!token) {
      navigate('/login');
      return;
    }
    setLoading(true);
    setErro('');

    apiGetDespesas(token)
      .then((data) => {
        if (Array.isArray(data)) {
          setDespesas(data);
        } else if (data && data.message) {
          setErro(data.message);
          if (data.message.toLowerCase().includes('token')) {
            localStorage.removeItem('token');
            setTimeout(() => navigate('/login'), 1500);
          }
        }
        setLoading(false);
      })
      .catch(() => {
        setErro('Erro ao carregar despesas.');
        setLoading(false);
      });
  }, [token, reload, navigate]);

  const refreshExpenses = () => setReload((r) => !r);

  const handleLogout = () => {
    localStorage.removeItem('token');
    navigate('/login');
  };

  return (
    <Box className="container" minHeight="100vh" bgcolor="#f5f5f5" py={6}>
      <Card sx={{ minWidth: 400, maxWidth: 700, margin: '0 auto' }}>
        <CardContent>
          <Header />
          <Button onClick={handleLogout} color="error" variant="outlined" sx={{ float: 'right', mb: 2 }}>
            Sair
          </Button>
          <Typography variant="h5" textAlign="center" gutterBottom>
            Minhas Despesas
          </Typography>
          {/* Adiciona o Card do Gráfico logo aqui */}
          <Card sx={{ mb: 4 }}>
            <CardContent>
              <Typography variant="h6" textAlign="center" gutterBottom>
                Despesas por Categoria
              </Typography>
              <ExpenseChart expenses={despesas} />
            </CardContent>
          </Card>
          <ExpenseForm onAdd={refreshExpenses} />
          {erro && <Alert severity="error">{erro}</Alert>}
          <ExpenseList despesas={despesas} loading={loading} refresh={refreshExpenses} />
        </CardContent>
      </Card>
    </Box>
  );
};

export default Dashboard;
